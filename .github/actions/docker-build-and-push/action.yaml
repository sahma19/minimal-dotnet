name: Build and push docker containers to ghcr.io
description: |
  Build a Docker image (+ SBOM, provenance), tag it, and push.

inputs:
  dockerfile:
    description: Path to Dockerfile
    required: true
  repo-name:
    description: repo part (e.g. `foo-api`)
    required: true
  image-name:
    description: name of the project to be built
    required: true
  docker-context:
    description: build context
    required: false
    default: .
  dry-run:
    description: skip push
    required: false
    default: "false"
  build-args:
    description: build-arg list
    required: false
outputs:
  image:
    description: The full image name (including registry)
    value: ghcr.io/${{ github.repository_owner }}/${{ inputs.repo-name }}
  digest:
    description: The image digest produced by buildx
    value: ${{ steps.buildx.outputs.digest }}
  image_with_digest:
    description: The image reference with digest
    value: ghcr.io/${{ github.repository_owner }}/${{ inputs.repo-name }}@${{ steps.buildx.outputs.digest }}

runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false
        
    - name: Resolve container image name
      shell: bash
      run: echo "LOWERCASED=$(echo 'ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Extract metadata (tags & labels)
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      with:
        images: ${{ env.LOWERCASED }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image-name }}
        tags: |
          type=raw,value={{sha}},format=short,enable=${{ github.event_name == 'push' && github.ref_name == 'main' }}
          type=raw,value={{sha}}-pr.${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}
          type=raw,value={{sha}},format=short,enable=${{ github.event_name == 'workflow_dispatch' && github.ref_name == 'main' }}
          type=raw,value={{sha}}.{{branch}},enable=${{ github.event_name == 'workflow_dispatch' && github.ref_name != 'main' }}
          type=ref,event=branch,enable=${{ github.event_name != 'pull_request' }}
          type=raw,value=pr-${{ github.event.pull_request.number }}-{{head.ref}},enable=${{ github.event_name == 'pull_request' }}

    - name: Build & push via Buildx
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # 6.18.0
      id: buildx
      with:
        annotations: ${{ steps.meta.outputs.annotations }}
        build-args: ${{ inputs.build-args }}
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        labels: ${{ steps.meta.outputs.labels }}
        provenance: mode=max
        pull: true
        push: ${{ inputs.dry-run != 'true' }}
        sbom: true
        tags: ${{ steps.meta.outputs.tags }}
