name: Build and push docker containers to ghcr.io
description: |
  This action will ensure the image name is lowercased and that any artifacts are available.

inputs:
  dockerfile:
    description: The path of the Dockerfile to build
    required: true
  image-name:
    description: "The full image name excluding ghcr.io/<my_container>"
    required: true
  image-tag:
    description: "The image tag"
    required: true
  docker-context:
    description: The path for the docker build context, defaults to '.'
    required: false
    default: .
  dry-run:
    description: Perform all actions but without committing changes
    required: false
    default: "false"
  build-args:
    description: List of build-time variables
    required: false

runs:
  using: composite
  steps:
    - name: Resolve container image name
      shell: bash
      run: |
        FULL="ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}"
        echo "LOWERCASED=$(echo "$FULL" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_ENV"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
        ecr: false

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v4.0.1
      with:
        images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.dry-run != 'true' }}
        pull: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build-args }}

    - name: Output image
      shell: bash
      id: image
      run: |
        image_name="${IMAGE_REGISTRY}/${IMAGE_NAME}"
        echo "image=$image_name" >> "$GITHUB_OUTPUT"
