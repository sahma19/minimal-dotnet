name: Docker TCA â€“ build & upload OCI bundle

description: >
  Builds the container image **offline** (type=oci), uploads it with
  secure-upload-folder, and writes a provenance layout.

inputs:
  dockerfile:
    required: true
    description: "dockerfile"
  context:
    required: false
    default: "."
    description: "context"
  build-args:
    required: false
    description: "build args"
  image-tag:
    required: true
    description: "image tag"

outputs:
  oci-download-name:
    value: ${{ steps.build.outputs.artifact-name }}
    description: "oci-download name"
  oci-download-sha256:
    value: ${{ steps.build.outputs.artifact-sha256 }}
    description: "oci download sha"

runs:
  using: composite
  steps:
    - id: build
      name: Build OCI (no push)
      uses: ./../__TOOL_CHECKOUT_DIR__/./.github/actions/docker-build-only
      with:
        dockerfile:     ${{ inputs.dockerfile }}
        docker-context: ${{ inputs.context }}
        build-args:     ${{ inputs.build-args }}

    - name: Write provenance layout
      shell: bash
      run: |
        echo "SLSA_ATTESTATIONS_OUTPUTS_FOLDER=attestations-${{ steps.build.outputs.artifact-name }}" >> "$GITHUB_ENV"
        mkdir -p "${SLSA_OUTPUTS_DIR}"

        cat > "${SLSA_OUTPUTS_DIR}/artifacts-layout.json" <<EOF
        {
          "version": 1,
          "attestations": [
            {
              "name": "${{ inputs.image-tag }}",
              "subjects": [
                {
                  "name": "ghcr.io/${{ github.repository_owner }}/$(basename "${{ github.repository }}"):${{ inputs.image-tag }}",
                  "digest": { "sha256": "${{ steps.build.outputs.artifact-sha256 }}" }
                }
              ]
            }
          ]
        }
        EOF