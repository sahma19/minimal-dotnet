name: SLSA Callback for .NET Build

inputs:
  slsa-workflow-inputs:
    description: "JSON string of inputs"
    required: true
  slsa-layout-file:
    description: "Path to the layout file"
    required: true
  slsa-workflow-secret1:
    description: "GitHub token (or other secret)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Parse JSON inputs into env
      id: parse
      shell: bash
      run: |
        echo "Parsing inputs.json"
        echo '${{ inputs.slsa-workflow-inputs }}' > inputs.json

        if ! jq empty inputs.json 2>/dev/null; then
          echo "::error::Invalid JSON in slsa-workflow-inputs"
          cat inputs.json
          exit 1
        fi

        jq -r 'to_entries[] | "\(.key)=\(.value | tostring)"' inputs.json >> "$GITHUB_ENV"

    - name: Run dotnet-build logic
      uses: ./.github/actions/dotnet-build
      with:
        solution:        ${{ env.solution }}
        project:         ${{ env.project }}
        configuration:   ${{ env.configuration }}
        dockerfile:      ${{ env.dockerfile }}
        dry-run:         ${{ env.dry-run }}
        sdk-version:     ${{ env.sdk-version }}
        runtime-version: ${{ env.runtime-version }}

    - name: Write SLSA layout file
      shell: bash
      run: |
        mkdir -p "$(dirname "${{ inputs.slsa-layout-file }}")"
        cat <<EOF > "${{ inputs.slsa-layout-file }}"
        {
          "version": 1,
          "attestations": [
            {
              "name": "${{ env.configuration }}-${{ env.version }}.build.slsa",
              "subjects": [
                {
                  "name": "ghcr.io/${{ github.repository_owner }}/${{ env.configuration }}:${{ env.version }}",
                  "digest": {
                    "sha256": "${{ steps.build.outputs.digest }}"
                  }
                }
              ]
            }
          ]
        }
        EOF
